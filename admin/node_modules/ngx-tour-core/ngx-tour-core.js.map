{"version":3,"file":"ngx-tour-core.js","sources":["ts/src/ngx-tour-core.ts","ts/src/tour.module.ts","ts/src/tour-hotkey-listener.component.ts","ts/src/tour.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {TourModule,TourService,IStepOption,TourState,TourAnchorDirective,TourHotkeyListenerComponent} from './public_api';\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\nimport { TourService } from './tour.service';\nexport class TourModule {\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TourModule,\n            providers: [\n                TourService,\n            ],\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [TourHotkeyListenerComponent],\n    exports: [TourHotkeyListenerComponent],\n    imports: [CommonModule, RouterModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTourModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourModule.ctorParameters;\n}\n;\n\nexport { TourService };\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostListener } from '@angular/core';\n\nimport { TourService, TourState } from './tour.service';\nexport class TourHotkeyListenerComponent {\n/**\n * @param {?} tourService\n */\nconstructor(public tourService: TourService) { }\n/**\n * Configures hot keys for controlling the tour with the keyboard\n * @param {?} event\n * @return {?}\n */\npublic onEscapeKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON\n      && this.tourService.isHotkeysEnabled()) {\n      this.tourService.end();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowRightKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON\n      && this.tourService.hasNext(this.tourService.currentStep)\n      && this.tourService.isHotkeysEnabled()) {\n      this.tourService.next();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowLeftKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON\n      && this.tourService.hasPrev(this.tourService.currentStep)\n      && this.tourService.isHotkeysEnabled()) {\n      this.tourService.prev();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tour-hotkey-listener',\n  template: ` `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onEscapeKey': [{ type: HostListener, args: ['window:keydown.Escape', ] },],\n'onArrowRightKey': [{ type: HostListener, args: ['window:keydown.ArrowRight', ] },],\n'onArrowLeftKey': [{ type: HostListener, args: ['window:keydown.ArrowLeft', ] },],\n};\n}\n\nfunction TourHotkeyListenerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTourHotkeyListenerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourHotkeyListenerComponent.ctorParameters;\n/** @type {?} */\nTourHotkeyListenerComponent.propDecorators;\n/** @type {?} */\nTourHotkeyListenerComponent.prototype.tourService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import'rxjs/add/operator/filter';\nimport'rxjs/add/operator/first';\n\nimport { Injectable } from '@angular/core';\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operator/map';\nimport { mergeStatic } from 'rxjs/operator/merge';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TourAnchorDirective } from './tour-anchor.directive';\n\nexport interface IStepOption {\n  stepId?: string;\n  anchorId?: string;\n  title?: string;\n  content?: string;\n  route?: string | UrlSegment[];\n  nextStep?: number | string;\n  prevStep?: number | string;\n  placement?: any;\n  preventScrolling?: boolean;\n  prevBtnTitle?: string;\n  nextBtnTitle?: string;\n  endBtnTitle?: string;\n}\nexport type TourState = number;\nexport let TourState: any = {};\nTourState.OFF = 0;\nTourState.ON = 1;\nTourState.PAUSED = 2;\nTourState[TourState.OFF] = \"OFF\";\nTourState[TourState.ON] = \"ON\";\nTourState[TourState.PAUSED] = \"PAUSED\";\n\nexport class TourService<T extends IStepOption = IStepOption> {\npublic stepShow$: Subject<T> = new Subject();\npublic stepHide$: Subject<T> = new Subject();\npublic initialize$: Subject<T[]> = new Subject();\npublic start$: Subject<T> = new Subject();\npublic end$: Subject<any> = new Subject();\npublic pause$: Subject<T> = new Subject();\npublic resume$: Subject<T> = new Subject();\npublic anchorRegister$: Subject<string> = new Subject();\npublic anchorUnregister$: Subject<string> = new Subject();\npublic events$: Observable<{ name: string, value: any }> = mergeStatic(\n    map.bind(this.stepShow$)(value => ({ name: 'stepShow', value })),\n    map.bind(this.stepHide$)(value => ({ name: 'stepHide', value })),\n    map.bind(this.initialize$)(value => ({ name: 'initialize', value })),\n    map.bind(this.start$)(value => ({ name: 'start', value })),\n    map.bind(this.end$)(value => ({ name: 'end', value })),\n    map.bind(this.pause$)(value => ({ name: 'pause', value })),\n    map.bind(this.resume$)(value => ({ name: 'resume', value })),\n    map.bind(this.anchorRegister$)(value => ({ name: 'anchorRegister', value })),\n    map.bind(this.anchorUnregister$)(value => ({ name: 'anchorUnregister', value })),\n  );\npublic steps: T[] = [];\npublic currentStep: T;\npublic anchors: { [anchorId: string]: TourAnchorDirective } = {};\nprivate status: TourState = TourState.OFF;\nprivate isHotKeysEnabled = true;\n/**\n * @param {?} router\n */\nconstructor(private router: Router) { }\n/**\n * @param {?} steps\n * @param {?=} stepDefaults\n * @return {?}\n */\npublic initialize(steps: T[], stepDefaults?: T): void {\n    if (steps && steps.length > 0) {\n      this.status = TourState.OFF;\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\n      this.initialize$.next(this.steps);\n    }\n  }\n/**\n * @return {?}\n */\npublic disableHotkeys(): void {\n    this.isHotKeysEnabled = false;\n  }\n/**\n * @return {?}\n */\npublic enableHotkeys(): void {\n    this.isHotKeysEnabled = true;\n  }\n/**\n * @return {?}\n */\npublic start(): void {\n    this.startAt(0);\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic startAt(stepId: number | string): void {\n    this.status = TourState.ON;\n    this.goToStep(this.loadStep(stepId));\n    this.start$.next();\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @return {?}\n */\npublic end(): void {\n    this.status = TourState.OFF;\n    this.hideStep(this.currentStep);\n    this.currentStep = undefined;\n    this.end$.next();\n  }\n/**\n * @return {?}\n */\npublic pause(): void {\n    this.status = TourState.PAUSED;\n    this.hideStep(this.currentStep);\n    this.pause$.next();\n  }\n/**\n * @return {?}\n */\npublic resume(): void {\n    this.status = TourState.ON;\n    this.showStep(this.currentStep);\n    this.resume$.next();\n  }\n/**\n * @param {?=} pause\n * @return {?}\n */\npublic toggle(pause?: boolean): void {\n    if (pause) {\n      if (this.currentStep) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    } else {\n      if (this.currentStep) {\n        this.end();\n      } else {\n        this.start();\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic next(): void {\n    if (this.hasNext(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasNext(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get next step. No currentStep.');\n      return false;\n    }\n    return step.nextStep !== undefined || this.steps.indexOf(step) < this.steps.length - 1;\n  }\n/**\n * @return {?}\n */\npublic prev(): void {\n    if (this.hasPrev(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasPrev(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get previous step. No currentStep.');\n      return false;\n    }\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic goto(stepId: number | string): void {\n    this.goToStep(this.loadStep(stepId));\n  }\n/**\n * @param {?} anchorId\n * @param {?} anchor\n * @return {?}\n */\npublic register(anchorId: string, anchor: TourAnchorDirective): void {\n    if (this.anchors[anchorId]) {\n      throw new Error('anchorId ' + anchorId + ' already registered!');\n    }\n    this.anchors[anchorId] = anchor;\n    this.anchorRegister$.next(anchorId);\n  }\n/**\n * @param {?} anchorId\n * @return {?}\n */\npublic unregister(anchorId: string): void {\n    delete this.anchors[anchorId];\n    this.anchorUnregister$.next(anchorId);\n  }\n/**\n * @return {?}\n */\npublic getStatus(): TourState {\n    return this.status;\n  }\n/**\n * @return {?}\n */\npublic isHotkeysEnabled(): boolean {\n    return this.isHotKeysEnabled;\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate goToStep(step: T): void {\n    if (!step) {\n      console.warn('Can\\'t go to non-existent step');\n      this.end();\n      return;\n    }\n    let /** @type {?} */ navigatePromise: Promise<boolean> = new Promise(resolve => resolve(true));\n    if (step.route !== undefined && typeof (step.route) === 'string') {\n      navigatePromise = this.router.navigateByUrl(step.route);\n    } else if (step.route && Array.isArray(step.route)) {\n      navigatePromise = this.router.navigate(step.route);\n    }\n    navigatePromise.then(navigated => {\n      if (navigated !== false) {\n        setTimeout(() => this.setCurrentStep(step));\n      }\n    });\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\nprivate loadStep(stepId: number | string): T {\n    if (typeof (stepId) === 'number') {\n      return this.steps[stepId];\n    } else {\n      return this.steps.find(step => step.stepId === stepId);\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate setCurrentStep(step: T): void {\n    if (this.currentStep) {\n      this.hideStep(this.currentStep);\n    }\n    this.currentStep = step;\n    this.showStep(this.currentStep);\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate showStep(step: T): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      console.warn('Can\\'t attach to unregistered anchor with id ' + step.anchorId);\n      this.end();\n      return;\n    }\n    anchor.showTourStep(step);\n    this.stepShow$.next(step);\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate hideStep(step: T): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      return;\n    }\n    anchor.hideTourStep();\n    this.stepHide$.next(step);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\n\nfunction TourService_tsickle_Closure_declarations() {\n/** @type {?} */\nTourService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourService.ctorParameters;\n/** @type {?} */\nTourService.prototype.stepShow$;\n/** @type {?} */\nTourService.prototype.stepHide$;\n/** @type {?} */\nTourService.prototype.initialize$;\n/** @type {?} */\nTourService.prototype.start$;\n/** @type {?} */\nTourService.prototype.end$;\n/** @type {?} */\nTourService.prototype.pause$;\n/** @type {?} */\nTourService.prototype.resume$;\n/** @type {?} */\nTourService.prototype.anchorRegister$;\n/** @type {?} */\nTourService.prototype.anchorUnregister$;\n/** @type {?} */\nTourService.prototype.events$;\n/** @type {?} */\nTourService.prototype.steps;\n/** @type {?} */\nTourService.prototype.currentStep;\n/** @type {?} */\nTourService.prototype.anchors;\n/** @type {?} */\nTourService.prototype.status;\n/** @type {?} */\nTourService.prototype.isHotKeysEnabled;\n/** @type {?} */\nTourService.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["map","Subject","router"],"mappings":"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"}
