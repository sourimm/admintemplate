{"version":3,"file":"select.component.d.ts","sources":["select.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnChanges, OnInit, EventEmitter, ExistingProvider, ElementRef, SimpleChanges, TemplateRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { SelectDropdownComponent } from './select-dropdown.component';\nimport { IOption } from './option.interface';\nimport { Option } from './option';\nexport declare const SELECT_VALUE_ACCESSOR: ExistingProvider;\nexport declare class SelectComponent implements ControlValueAccessor, OnChanges, OnInit {\n    private hostElement;\n    options: Array<IOption>;\n    allowClear: boolean;\n    disabled: boolean;\n    multiple: boolean;\n    noFilter: number;\n    highlightColor: string;\n    highlightTextColor: string;\n    notFoundMsg: string;\n    placeholder: string;\n    filterPlaceholder: string;\n    label: string;\n    opened: EventEmitter<null>;\n    closed: EventEmitter<null>;\n    selected: EventEmitter<IOption>;\n    deselected: EventEmitter<IOption | IOption[]>;\n    focus: EventEmitter<null>;\n    blur: EventEmitter<null>;\n    noOptionsFound: EventEmitter<string>;\n    filterInputChanged: EventEmitter<string>;\n    selectionSpan: ElementRef;\n    dropdown: SelectDropdownComponent;\n    filterInput: ElementRef;\n    optionTemplate: TemplateRef<any>;\n    private _value;\n    private optionList;\n    hasFocus: boolean;\n    isOpen: boolean;\n    isBelow: boolean;\n    private filterEnabled;\n    private filterInputWidth;\n    private isDisabled;\n    private placeholderView;\n    private clearClicked;\n    private selectContainerClicked;\n    private optionListClicked;\n    private optionClicked;\n    private width;\n    private top;\n    private left;\n    private onChange;\n    private onTouched;\n    constructor(hostElement: ElementRef);\n    /** Event handlers. **/\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngAfterViewInit(): void;\n    onWindowBlur(): void;\n    onWindowClick(): void;\n    onWindowResize(): void;\n    onSelectContainerClick(event: any): void;\n    onSelectContainerFocus(): void;\n    onSelectContainerKeydown(event: any): void;\n    onOptionsListClick(): void;\n    onDropdownOptionClicked(option: Option): void;\n    onSingleFilterClick(): void;\n    onSingleFilterFocus(): void;\n    onFilterInput(term: string): void;\n    onSingleFilterKeydown(event: any): void;\n    onMultipleFilterKeydown(event: any): void;\n    onMultipleFilterFocus(): void;\n    onClearSelectionClick(event: any): void;\n    onDeselectOptionClick(option: Option): void;\n    /** API. **/\n    open(): void;\n    close(): void;\n    clear(): void;\n    select(value: string | Array<string>): void;\n    /** ControlValueAccessor interface methods. **/\n    writeValue(value: any): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n    /** Input change handling. **/\n    private handleInputChanges(changes);\n    private updateOptionList(options);\n    private updateFilterEnabled();\n    /** Value. **/\n    value: string | string[];\n    private valueChanged();\n    private updateState();\n    /** Select. **/\n    private selectOption(option);\n    private deselectOption(option);\n    private clearSelection();\n    private toggleSelectOption(option);\n    private selectHighlightedOption();\n    private deselectLast();\n    /** Dropdown. **/\n    private toggleDropdown();\n    private openDropdown();\n    private closeDropdown(focus);\n    /** Filter. **/\n    private filter(term);\n    private clearFilterInput();\n    private setMultipleFilterInput(value);\n    /** Keys. **/\n    private KEYS;\n    private handleSelectContainerKeydown(event);\n    private handleMultipleFilterKeydown(event);\n    private handleSingleFilterKeydown(event);\n    /** View. **/\n    _blur(): void;\n    _focus(): void;\n    _focusSelectContainer(): void;\n    private updateWidth();\n    private updatePosition();\n    private updateFilterWidth();\n}\n"]}