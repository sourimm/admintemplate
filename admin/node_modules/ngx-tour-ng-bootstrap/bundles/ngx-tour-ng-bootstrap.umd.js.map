{"version":3,"file":"ngx-tour-ng-bootstrap.umd.js","sources":["~/ngx-tour-ng-bootstrap/src/ng-bootstrap.module.ts","~/ngx-tour-ng-bootstrap/src/tour-step-template.component.ts","~/ngx-tour-ng-bootstrap/src/tour-anchor.directive.ts","~/ngx-tour-ng-bootstrap/src/tour-step-template.service.ts","~/ngx-tour-ng-bootstrap/src/ng-bootstrap-tour.service.ts","../../../../dist/ngx-tour-core/ts/src/tour.module.ts","../../../../dist/ngx-tour-core/ts/src/tour-hotkey-listener.component.ts","../../../../dist/ngx-tour-core/ts/src/tour.service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TourModule } from 'ngx-tour-core';\n\nimport { NgbTourService } from './ng-bootstrap-tour.service';\nimport { TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective } from './tour-anchor.directive';\nimport { TourStepTemplateComponent } from './tour-step-template.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\n\nexport { TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent, NgbTourService };\nexport class TourNgBootstrapModule {\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TourNgBootstrapModule,\n      providers: [\n        TourStepTemplateService,\n        ...TourModule.forRoot().providers,\n        NgbTourService\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent],\n  exports: [TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent],\n  imports: [CommonModule, NgbPopoverModule.forRoot()],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourNgBootstrapModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTourNgBootstrapModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourNgBootstrapModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { TourHotkeyListenerComponent, IStepOption } from 'ngx-tour-core';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { Component, TemplateRef, ViewChild, AfterContentInit, ViewEncapsulation, Input, ContentChild } from '@angular/core';\nimport { NgbTourService } from './ng-bootstrap-tour.service';\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent implements AfterContentInit {\npublic defaultTourStepTemplate: TemplateRef<any>;\npublic stepTemplate: TemplateRef<{ step: IStepOption }>;\n/**\n * @param {?} tourStepTemplateService\n * @param {?} tourService\n */\nconstructor(private tourStepTemplateService: TourStepTemplateService,\npublic tourService: NgbTourService) {\n    super(tourService);\n  }\n/**\n * @return {?}\n */\npublic ngAfterContentInit(): void {\n    this.tourStepTemplateService.template = this.stepTemplate || this.defaultTourStepTemplate;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'tour-step-template',\n  template: `\n    <ng-template #tourStep let-step=\"step\">\n      <p class=\"tour-step-content\">{{step?.content}}</p>\n      <div class=\"tour-step-navigation\">\n        <button *ngIf=\"tourService.hasPrev(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.prev()\">« {{step?.prevBtnTitle}}</button>\n        <button *ngIf=\"tourService.hasNext(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.next()\">{{step?.nextBtnTitle}} »</button>\n        <button class=\"btn btn-sm btn-default\" (click)=\"tourService.end()\">{{step?.endBtnTitle}}</button>\n      </div>\n    </ng-template>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourStepTemplateService, },\n{type: NgbTourService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'defaultTourStepTemplate': [{ type: ViewChild, args: ['tourStep', { read: TemplateRef }, ] },],\n'stepTemplate': [{ type: Input },{ type: ContentChild, args: [TemplateRef, ] },],\n};\n}\n\nfunction TourStepTemplateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTourStepTemplateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourStepTemplateComponent.ctorParameters;\n/** @type {?} */\nTourStepTemplateComponent.propDecorators;\n/** @type {?} */\nTourStepTemplateComponent.prototype.defaultTourStepTemplate;\n/** @type {?} */\nTourStepTemplateComponent.prototype.stepTemplate;\n/** @type {?} */\nTourStepTemplateComponent.prototype.tourStepTemplateService;\n/** @type {?} */\nTourStepTemplateComponent.prototype.tourService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Host, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbPopover, Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { TourAnchorDirective } from 'ngx-tour-core';\nimport withinviewport from 'withinviewport';\n\nimport { NgbTourService } from './ng-bootstrap-tour.service';\nimport { INgbStepOption } from './step-option.interface';\nimport { TourStepTemplateService } from './tour-step-template.service';\nexport class TourAnchorNgBootstrapPopoverDirective extends NgbPopover { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{ selector: '[tourAnchor]' }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourAnchorNgBootstrapPopoverDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTourAnchorNgBootstrapPopoverDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourAnchorNgBootstrapPopoverDirective.ctorParameters;\n}\n\nexport class TourAnchorNgBootstrapDirective implements OnInit, OnDestroy, TourAnchorDirective {\npublic tourAnchor: string;\npublic isActive: boolean;\n/**\n * @param {?} tourService\n * @param {?} tourStepTemplate\n * @param {?} element\n * @param {?} popoverDirective\n */\nconstructor(\nprivate tourService: NgbTourService,\nprivate tourStepTemplate: TourStepTemplateService,\nprivate element: ElementRef,\nprivate popoverDirective: TourAnchorNgBootstrapPopoverDirective,\n  ) {\n\n    this.popoverDirective.toggle = () => { };\n  }\n/**\n * @return {?}\n */\npublic ngOnInit(): void {\n    this.tourService.register(this.tourAnchor, this);\n  }\n/**\n * @return {?}\n */\npublic ngOnDestroy(): void {\n    this.tourService.unregister(this.tourAnchor);\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic showTourStep(step: INgbStepOption): void {\n    this.isActive = true;\n    this.popoverDirective.ngbPopover = this.tourStepTemplate.template;\n    this.popoverDirective.popoverTitle = step.title;\n    this.popoverDirective.container =  'body';\n    this.popoverDirective.placement = /** @type {?} */(( <Placement>(step.placement || 'top')\n      .replace('before', 'left').replace('after', 'right')\n      .replace('below', 'bottom').replace('above', 'top')));\n    step.prevBtnTitle = step.prevBtnTitle || 'Prev';\n    step.nextBtnTitle = step.nextBtnTitle || 'Next';\n    step.endBtnTitle = step.endBtnTitle || 'End';\n\n    this.popoverDirective.open({ step });\n    if (!step.preventScrolling) {\n      if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {\n        ( /** @type {?} */((<HTMLElement>this.element.nativeElement))).scrollIntoView(false);\n      } else if (!withinviewport(this.element.nativeElement, { sides: 'left top right' })) {\n        ( /** @type {?} */((<HTMLElement>this.element.nativeElement))).scrollIntoView(true);\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic hideTourStep(): void {\n    this.isActive = false;\n    this.popoverDirective.close();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[tourAnchor]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbTourService, },\n{type: TourStepTemplateService, },\n{type: ElementRef, },\n{type: TourAnchorNgBootstrapPopoverDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'tourAnchor': [{ type: Input },],\n'isActive': [{ type: HostBinding, args: ['class.touranchor--is-active', ] },],\n};\n}\n\nfunction TourAnchorNgBootstrapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTourAnchorNgBootstrapDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourAnchorNgBootstrapDirective.ctorParameters;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.propDecorators;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.tourAnchor;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.isActive;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.tourService;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.tourStepTemplate;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.element;\n/** @type {?} */\nTourAnchorNgBootstrapDirective.prototype.popoverDirective;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nexport class TourStepTemplateService {\npublic template: TemplateRef<{content: string}>;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourStepTemplateService_tsickle_Closure_declarations() {\n/** @type {?} */\nTourStepTemplateService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourStepTemplateService.ctorParameters;\n/** @type {?} */\nTourStepTemplateService.prototype.template;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { TourService } from 'ngx-tour-core';\n\nimport { INgbStepOption } from './step-option.interface';\nexport class NgbTourService extends TourService<INgbStepOption> {static decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgbTourService_tsickle_Closure_declarations() {\n/** @type {?} */\nNgbTourService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgbTourService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\nimport { TourService } from './tour.service';\nexport class TourModule {\n/**\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TourModule,\n            providers: [\n                TourService,\n            ],\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [TourHotkeyListenerComponent],\n    exports: [TourHotkeyListenerComponent],\n    imports: [CommonModule, RouterModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TourModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTourModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourModule.ctorParameters;\n}\n;\n\nexport { TourService };\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, HostListener } from '@angular/core';\n\nimport { TourService, TourState } from './tour.service';\nexport class TourHotkeyListenerComponent {\n/**\n * @param {?} tourService\n */\nconstructor(public tourService: TourService) { }\n/**\n * Configures hot keys for controlling the tour with the keyboard\n * @param {?} event\n * @return {?}\n */\npublic onEscapeKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON\n      && this.tourService.isHotkeysEnabled()) {\n      this.tourService.end();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowRightKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON\n      && this.tourService.hasNext(this.tourService.currentStep)\n      && this.tourService.isHotkeysEnabled()) {\n      this.tourService.next();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\npublic onArrowLeftKey(event: KeyboardEvent): void {\n    if (this.tourService.getStatus() === TourState.ON\n      && this.tourService.hasPrev(this.tourService.currentStep)\n      && this.tourService.isHotkeysEnabled()) {\n      this.tourService.prev();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'tour-hotkey-listener',\n  template: ` `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TourService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onEscapeKey': [{ type: HostListener, args: ['window:keydown.Escape', ] },],\n'onArrowRightKey': [{ type: HostListener, args: ['window:keydown.ArrowRight', ] },],\n'onArrowLeftKey': [{ type: HostListener, args: ['window:keydown.ArrowLeft', ] },],\n};\n}\n\nfunction TourHotkeyListenerComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTourHotkeyListenerComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourHotkeyListenerComponent.ctorParameters;\n/** @type {?} */\nTourHotkeyListenerComponent.propDecorators;\n/** @type {?} */\nTourHotkeyListenerComponent.prototype.tourService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import'rxjs/add/operator/filter';\nimport'rxjs/add/operator/first';\n\nimport { Injectable } from '@angular/core';\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { map } from 'rxjs/operator/map';\nimport { mergeStatic } from 'rxjs/operator/merge';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TourAnchorDirective } from './tour-anchor.directive';\n\nexport interface IStepOption {\n  stepId?: string;\n  anchorId?: string;\n  title?: string;\n  content?: string;\n  route?: string | UrlSegment[];\n  nextStep?: number | string;\n  prevStep?: number | string;\n  placement?: any;\n  preventScrolling?: boolean;\n  prevBtnTitle?: string;\n  nextBtnTitle?: string;\n  endBtnTitle?: string;\n}\nexport type TourState = number;\nexport let TourState: any = {};\nTourState.OFF = 0;\nTourState.ON = 1;\nTourState.PAUSED = 2;\nTourState[TourState.OFF] = \"OFF\";\nTourState[TourState.ON] = \"ON\";\nTourState[TourState.PAUSED] = \"PAUSED\";\n\nexport class TourService<T extends IStepOption = IStepOption> {\npublic stepShow$: Subject<T> = new Subject();\npublic stepHide$: Subject<T> = new Subject();\npublic initialize$: Subject<T[]> = new Subject();\npublic start$: Subject<T> = new Subject();\npublic end$: Subject<any> = new Subject();\npublic pause$: Subject<T> = new Subject();\npublic resume$: Subject<T> = new Subject();\npublic anchorRegister$: Subject<string> = new Subject();\npublic anchorUnregister$: Subject<string> = new Subject();\npublic events$: Observable<{ name: string, value: any }> = mergeStatic(\n    map.bind(this.stepShow$)(value => ({ name: 'stepShow', value })),\n    map.bind(this.stepHide$)(value => ({ name: 'stepHide', value })),\n    map.bind(this.initialize$)(value => ({ name: 'initialize', value })),\n    map.bind(this.start$)(value => ({ name: 'start', value })),\n    map.bind(this.end$)(value => ({ name: 'end', value })),\n    map.bind(this.pause$)(value => ({ name: 'pause', value })),\n    map.bind(this.resume$)(value => ({ name: 'resume', value })),\n    map.bind(this.anchorRegister$)(value => ({ name: 'anchorRegister', value })),\n    map.bind(this.anchorUnregister$)(value => ({ name: 'anchorUnregister', value })),\n  );\npublic steps: T[] = [];\npublic currentStep: T;\npublic anchors: { [anchorId: string]: TourAnchorDirective } = {};\nprivate status: TourState = TourState.OFF;\nprivate isHotKeysEnabled = true;\n/**\n * @param {?} router\n */\nconstructor(private router: Router) { }\n/**\n * @param {?} steps\n * @param {?=} stepDefaults\n * @return {?}\n */\npublic initialize(steps: T[], stepDefaults?: T): void {\n    if (steps && steps.length > 0) {\n      this.status = TourState.OFF;\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\n      this.initialize$.next(this.steps);\n    }\n  }\n/**\n * @return {?}\n */\npublic disableHotkeys(): void {\n    this.isHotKeysEnabled = false;\n  }\n/**\n * @return {?}\n */\npublic enableHotkeys(): void {\n    this.isHotKeysEnabled = true;\n  }\n/**\n * @return {?}\n */\npublic start(): void {\n    this.startAt(0);\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic startAt(stepId: number | string): void {\n    this.status = TourState.ON;\n    this.goToStep(this.loadStep(stepId));\n    this.start$.next();\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @return {?}\n */\npublic end(): void {\n    this.status = TourState.OFF;\n    this.hideStep(this.currentStep);\n    this.currentStep = undefined;\n    this.end$.next();\n  }\n/**\n * @return {?}\n */\npublic pause(): void {\n    this.status = TourState.PAUSED;\n    this.hideStep(this.currentStep);\n    this.pause$.next();\n  }\n/**\n * @return {?}\n */\npublic resume(): void {\n    this.status = TourState.ON;\n    this.showStep(this.currentStep);\n    this.resume$.next();\n  }\n/**\n * @param {?=} pause\n * @return {?}\n */\npublic toggle(pause?: boolean): void {\n    if (pause) {\n      if (this.currentStep) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    } else {\n      if (this.currentStep) {\n        this.end();\n      } else {\n        this.start();\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic next(): void {\n    if (this.hasNext(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasNext(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get next step. No currentStep.');\n      return false;\n    }\n    return step.nextStep !== undefined || this.steps.indexOf(step) < this.steps.length - 1;\n  }\n/**\n * @return {?}\n */\npublic prev(): void {\n    if (this.hasPrev(this.currentStep)) {\n      this.goToStep(this.loadStep(this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1));\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\npublic hasPrev(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get previous step. No currentStep.');\n      return false;\n    }\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\npublic goto(stepId: number | string): void {\n    this.goToStep(this.loadStep(stepId));\n  }\n/**\n * @param {?} anchorId\n * @param {?} anchor\n * @return {?}\n */\npublic register(anchorId: string, anchor: TourAnchorDirective): void {\n    if (this.anchors[anchorId]) {\n      throw new Error('anchorId ' + anchorId + ' already registered!');\n    }\n    this.anchors[anchorId] = anchor;\n    this.anchorRegister$.next(anchorId);\n  }\n/**\n * @param {?} anchorId\n * @return {?}\n */\npublic unregister(anchorId: string): void {\n    delete this.anchors[anchorId];\n    this.anchorUnregister$.next(anchorId);\n  }\n/**\n * @return {?}\n */\npublic getStatus(): TourState {\n    return this.status;\n  }\n/**\n * @return {?}\n */\npublic isHotkeysEnabled(): boolean {\n    return this.isHotKeysEnabled;\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate goToStep(step: T): void {\n    if (!step) {\n      console.warn('Can\\'t go to non-existent step');\n      this.end();\n      return;\n    }\n    let /** @type {?} */ navigatePromise: Promise<boolean> = new Promise(resolve => resolve(true));\n    if (step.route !== undefined && typeof (step.route) === 'string') {\n      navigatePromise = this.router.navigateByUrl(step.route);\n    } else if (step.route && Array.isArray(step.route)) {\n      navigatePromise = this.router.navigate(step.route);\n    }\n    navigatePromise.then(navigated => {\n      if (navigated !== false) {\n        setTimeout(() => this.setCurrentStep(step));\n      }\n    });\n  }\n/**\n * @param {?} stepId\n * @return {?}\n */\nprivate loadStep(stepId: number | string): T {\n    if (typeof (stepId) === 'number') {\n      return this.steps[stepId];\n    } else {\n      return this.steps.find(step => step.stepId === stepId);\n    }\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate setCurrentStep(step: T): void {\n    if (this.currentStep) {\n      this.hideStep(this.currentStep);\n    }\n    this.currentStep = step;\n    this.showStep(this.currentStep);\n    this.router.events.filter(event => event instanceof NavigationStart).first().subscribe(() => {\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n    });\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate showStep(step: T): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      console.warn('Can\\'t attach to unregistered anchor with id ' + step.anchorId);\n      this.end();\n      return;\n    }\n    anchor.showTourStep(step);\n    this.stepShow$.next(step);\n  }\n/**\n * @param {?} step\n * @return {?}\n */\nprivate hideStep(step: T): void {\n    const /** @type {?} */ anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      return;\n    }\n    anchor.hideTourStep();\n    this.stepHide$.next(step);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\n\nfunction TourService_tsickle_Closure_declarations() {\n/** @type {?} */\nTourService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTourService.ctorParameters;\n/** @type {?} */\nTourService.prototype.stepShow$;\n/** @type {?} */\nTourService.prototype.stepHide$;\n/** @type {?} */\nTourService.prototype.initialize$;\n/** @type {?} */\nTourService.prototype.start$;\n/** @type {?} */\nTourService.prototype.end$;\n/** @type {?} */\nTourService.prototype.pause$;\n/** @type {?} */\nTourService.prototype.resume$;\n/** @type {?} */\nTourService.prototype.anchorRegister$;\n/** @type {?} */\nTourService.prototype.anchorUnregister$;\n/** @type {?} */\nTourService.prototype.events$;\n/** @type {?} */\nTourService.prototype.steps;\n/** @type {?} */\nTourService.prototype.currentStep;\n/** @type {?} */\nTourService.prototype.anchors;\n/** @type {?} */\nTourService.prototype.status;\n/** @type {?} */\nTourService.prototype.isHotKeysEnabled;\n/** @type {?} */\nTourService.prototype.router;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CommonModule","NgbPopoverModule","NgModule","Input","ContentChild","TemplateRef","ViewChild","ViewEncapsulation","Component","HostBinding","Host","ElementRef","Directive","NgbPopover","Injectable","RouterModule","HostListener","Router","NavigationStart","mergeStatic","map","Subject","router"],"mappings":"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"}
