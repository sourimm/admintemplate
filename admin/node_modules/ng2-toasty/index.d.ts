import { ModuleWithProviders } from "@angular/core";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './src/toast.component';
import * as ɵngcc2 from './src/toasty.component';
import * as ɵngcc3 from './src/shared';
import * as ɵngcc4 from '@angular/common';
export * from './src/toasty.service';
export * from './src/toasty.component';
export * from './src/toast.component';
export * from './src/shared';
import { ToastyService, ToastyConfig } from './src/toasty.service';
export declare let providers: (typeof ToastyConfig | {
    provide: typeof ToastyService;
    useFactory: (config: ToastyConfig) => ToastyService;
    deps: typeof ToastyConfig[];
})[];
export declare class ToastyModule {
    static forRoot(): ModuleWithProviders<ToastyModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<ToastyModule, [typeof ɵngcc1.ToastComponent, typeof ɵngcc2.ToastyComponent, typeof ɵngcc3.SafeHtmlPipe], [typeof ɵngcc4.CommonModule], [typeof ɵngcc1.ToastComponent, typeof ɵngcc2.ToastyComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<ToastyModule>;
}

//# sourceMappingURL=index.d.ts.map