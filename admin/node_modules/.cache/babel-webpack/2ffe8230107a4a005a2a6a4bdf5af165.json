{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscribeToObservable(input));\n  } else {\n    return new Observable(function (subscriber) {\n      var sub = new Subscription();\n      sub.add(scheduler.schedule(function () {\n        var observable = input[Symbol_observable]();\n        sub.add(observable.subscribe({\n          next: function next(value) {\n            sub.add(scheduler.schedule(function () {\n              return subscriber.next(value);\n            }));\n          },\n          error: function error(err) {\n            sub.add(scheduler.schedule(function () {\n              return subscriber.error(err);\n            }));\n          },\n          complete: function complete() {\n            sub.add(scheduler.schedule(function () {\n              return subscriber.complete();\n            }));\n          }\n        }));\n      }));\n      return sub;\n    });\n  }\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromObservable.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,YAAT,QAA6B,iBAA7B;AACA,SAAS,UAAU,IAAI,iBAAvB,QAAgD,sBAAhD;AACA,SAAS,qBAAT,QAAsC,+BAAtC;AAGA,OAAM,SAAA,cAAA,CAA4B,KAA5B,EAAsD,SAAtD,EAA8E;AAClF,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO,IAAI,UAAJ,CAAkB,qBAAqB,CAAC,KAAD,CAAvC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAI,UAAJ,CAAkB,UAAA,UAAU,EAAG;AACpC,UAAM,GAAG,GAAG,IAAI,YAAJ,EAAZ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAK;AAC9B,YAAM,UAAU,GAAoB,KAAK,CAAC,iBAAD,CAAL,EAApC;AACA,QAAA,GAAG,CAAC,GAAJ,CAAQ,UAAU,CAAC,SAAX,CAAqB;AAC3B,UAAA,IAD2B,gBACtB,KADsB,EACjB;AAAI,YAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB;AAAA,qBAAM,UAAU,CAAC,IAAX,CAAgB,KAAhB,CAAN;AAAA,aAAnB,CAAR;AAA4D,WAD/C;AAE3B,UAAA,KAF2B,iBAErB,GAFqB,EAElB;AAAI,YAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB;AAAA,qBAAM,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAN;AAAA,aAAnB,CAAR;AAA2D,WAF7C;AAG3B,UAAA,QAH2B,sBAGnB;AAAK,YAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB;AAAA,qBAAM,UAAU,CAAC,QAAX,EAAN;AAAA,aAAnB,CAAR;AAA2D;AAH7C,SAArB,CAAR;AAKD,OAPO,CAAR;AAQA,aAAO,GAAP;AACD,KAXM,CAAP;AAYD;AACF","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => {\n                const observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n                    error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n                    complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map"]},"metadata":{},"sourceType":"module"}