{"ast":null,"code":"import _inherits from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\n\nexport function ignoreElements() {\n  return function ignoreElementsOperatorFunction(source) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nvar IgnoreElementsOperator = /*#__PURE__*/function () {\n  function IgnoreElementsOperator() {\n    _classCallCheck(this, IgnoreElementsOperator);\n  }\n\n  _createClass(IgnoreElementsOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    }\n  }]);\n\n  return IgnoreElementsOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar IgnoreElementsSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(IgnoreElementsSubscriber, _Subscriber);\n\n  var _super = _createSuper(IgnoreElementsSubscriber);\n\n  function IgnoreElementsSubscriber() {\n    _classCallCheck(this, IgnoreElementsSubscriber);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IgnoreElementsSubscriber, [{\n    key: \"_next\",\n    value: function _next(unused) {// Do nothing\n    }\n  }]);\n\n  return IgnoreElementsSubscriber;\n}(Subscriber);","map":null,"metadata":{},"sourceType":"module"}