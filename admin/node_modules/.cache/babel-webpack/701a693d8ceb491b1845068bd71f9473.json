{"ast":null,"code":"import _assertThisInitialized from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\n\nexport function every(predicate, thisArg) {\n  return function (source) {\n    return source.lift(new EveryOperator(predicate, thisArg, source));\n  };\n}\n\nvar EveryOperator = /*#__PURE__*/function () {\n  function EveryOperator(predicate, thisArg, source) {\n    _classCallCheck(this, EveryOperator);\n\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n    this.source = source;\n  }\n\n  _createClass(EveryOperator, [{\n    key: \"call\",\n    value: function call(observer, source) {\n      return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    }\n  }]);\n\n  return EveryOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar EverySubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(EverySubscriber, _Subscriber);\n\n  var _super = _createSuper(EverySubscriber);\n\n  function EverySubscriber(destination, predicate, thisArg, source) {\n    var _this;\n\n    _classCallCheck(this, EverySubscriber);\n\n    _this = _super.call(this, destination);\n    _this.predicate = predicate;\n    _this.thisArg = thisArg;\n    _this.source = source;\n    _this.index = 0;\n    _this.thisArg = thisArg || _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(EverySubscriber, [{\n    key: \"notifyComplete\",\n    value: function notifyComplete(everyValueMatch) {\n      this.destination.next(everyValueMatch);\n      this.destination.complete();\n    }\n  }, {\n    key: \"_next\",\n    value: function _next(value) {\n      var result = false;\n\n      try {\n        result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n      } catch (err) {\n        this.destination.error(err);\n        return;\n      }\n\n      if (!result) {\n        this.notifyComplete(false);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.notifyComplete(true);\n    }\n  }]);\n\n  return EverySubscriber;\n}(Subscriber);","map":null,"metadata":{},"sourceType":"module"}