{"ast":null,"code":"/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport var subscribeToArray = function subscribeToArray(array) {\n  return function (subscriber) {\n    for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n\n    if (!subscriber.closed) {\n      subscriber.complete();\n    }\n  };\n};","map":{"version":3,"sources":["../../../src/internal/util/subscribeToArray.ts"],"names":[],"mappings":"AAEA;;;;AAIA,OAAO,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAI,KAAJ;AAAA,SAA4B,UAAC,UAAD,EAA8B;AACxF,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,KAAK,CAAC,MAA5B,EAAoC,CAAC,GAAG,GAAJ,IAAW,CAAC,UAAU,CAAC,MAA3D,EAAmE,CAAC,EAApE,EAAwE;AACtE,MAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,CAAC,CAAD,CAArB;AACD;;AACD,QAAI,CAAC,UAAU,CAAC,MAAhB,EAAwB;AACtB,MAAA,UAAU,CAAC,QAAX;AACD;AACF,GAP+B;AAAA,CAAzB","sourcesContent":["/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = (array) => (subscriber) => {\n    for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n    }\n    if (!subscriber.closed) {\n        subscriber.complete();\n    }\n};\n//# sourceMappingURL=subscribeToArray.js.map"]},"metadata":{},"sourceType":"module"}