{"ast":null,"code":"import _inherits from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\n\nexport function mapTo(value) {\n  return function (source) {\n    return source.lift(new MapToOperator(value));\n  };\n}\n\nvar MapToOperator = /*#__PURE__*/function () {\n  function MapToOperator(value) {\n    _classCallCheck(this, MapToOperator);\n\n    this.value = value;\n  }\n\n  _createClass(MapToOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n  }]);\n\n  return MapToOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar MapToSubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(MapToSubscriber, _Subscriber);\n\n  var _super = _createSuper(MapToSubscriber);\n\n  function MapToSubscriber(destination, value) {\n    var _this;\n\n    _classCallCheck(this, MapToSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.value = value;\n    return _this;\n  }\n\n  _createClass(MapToSubscriber, [{\n    key: \"_next\",\n    value: function _next(x) {\n      this.destination.next(this.value);\n    }\n  }]);\n\n  return MapToSubscriber;\n}(Subscriber);","map":null,"metadata":{},"sourceType":"module"}