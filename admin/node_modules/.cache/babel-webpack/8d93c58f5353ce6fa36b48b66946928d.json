{"ast":null,"code":"import _inherits from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\n\nexport function finalize(callback) {\n  return function (source) {\n    return source.lift(new FinallyOperator(callback));\n  };\n}\n\nvar FinallyOperator = /*#__PURE__*/function () {\n  function FinallyOperator(callback) {\n    _classCallCheck(this, FinallyOperator);\n\n    this.callback = callback;\n  }\n\n  _createClass(FinallyOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    }\n  }]);\n\n  return FinallyOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar FinallySubscriber = /*#__PURE__*/function (_Subscriber) {\n  _inherits(FinallySubscriber, _Subscriber);\n\n  var _super = _createSuper(FinallySubscriber);\n\n  function FinallySubscriber(destination, callback) {\n    var _this;\n\n    _classCallCheck(this, FinallySubscriber);\n\n    _this = _super.call(this, destination);\n\n    _this.add(new Subscription(callback));\n\n    return _this;\n  }\n\n  return FinallySubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/finalize.ts"],"names":[],"mappings":";;;;AACA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,YAAT,QAA6B,iBAA7B;AAIA;;;;;;;;;AAQA,OAAM,SAAA,QAAA,CAAsB,QAAtB,EAA0C;AAC9C,SAAO,UAAC,MAAD;AAAA,WAA2B,MAAM,CAAC,IAAP,CAAY,IAAI,eAAJ,CAAoB,QAApB,CAAZ,CAA3B;AAAA,GAAP;AACD;;IAED,e;AACE,2BAAoB,QAApB,EAAwC;AAAA;;AAApB,SAAA,QAAA,GAAA,QAAA;AACnB;;;;yBAEI,U,EAA2B,M,EAAW;AACzC,aAAO,MAAM,CAAC,SAAP,CAAiB,IAAI,iBAAJ,CAAsB,UAAtB,EAAkC,KAAK,QAAvC,CAAjB,CAAP;AACD;;;;;AAGH;;;;;;;IAKA,iB;;;;;AACE,6BAAY,WAAZ,EAAwC,QAAxC,EAA4D;AAAA;;AAAA;;AAC1D,8BAAM,WAAN;;AACA,UAAK,GAAL,CAAS,IAAI,YAAJ,CAAiB,QAAjB,CAAT;;AAF0D;AAG3D;;;EAJgC,U","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize(callback) {\n    return (source) => source.lift(new FinallyOperator(callback));\n}\nclass FinallyOperator {\n    constructor(callback) {\n        this.callback = callback;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber extends Subscriber {\n    constructor(destination, callback) {\n        super(destination);\n        this.add(new Subscription(callback));\n    }\n}\n//# sourceMappingURL=finalize.js.map"]},"metadata":{},"sourceType":"module"}