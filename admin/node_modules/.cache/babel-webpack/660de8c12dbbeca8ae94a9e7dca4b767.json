{"ast":null,"code":"import _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\n\nexport function subscribeOn(scheduler) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return function subscribeOnOperatorFunction(source) {\n    return source.lift(new SubscribeOnOperator(scheduler, delay));\n  };\n}\n\nvar SubscribeOnOperator = /*#__PURE__*/function () {\n  function SubscribeOnOperator(scheduler, delay) {\n    _classCallCheck(this, SubscribeOnOperator);\n\n    this.scheduler = scheduler;\n    this.delay = delay;\n  }\n\n  _createClass(SubscribeOnOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n  }]);\n\n  return SubscribeOnOperator;\n}();","map":{"version":3,"sources":["../../../src/internal/operators/subscribeOn.ts"],"names":[],"mappings":";;AAGA,SAAS,qBAAT,QAAsC,qCAAtC;AAGA;;;;;;;;;;;;AAWA,OAAM,SAAA,WAAA,CAAyB,SAAzB,EAAoE;AAAA,MAAjB,KAAiB,uEAAD,CAAC;AACxE,SAAO,SAAA,2BAAA,CAAqC,MAArC,EAA0D;AAC/D,WAAO,MAAM,CAAC,IAAP,CAAY,IAAI,mBAAJ,CAA2B,SAA3B,EAAsC,KAAtC,CAAZ,CAAP;AACD,GAFD;AAGD;;IAED,mB;AACE,+BAAoB,SAApB,EACoB,KADpB,EACiC;AAAA;;AADb,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,KAAA,GAAA,KAAA;AACnB;;;;yBACI,U,EAA2B,M,EAAW;AACzC,aAAO,IAAI,qBAAJ,CACL,MADK,EACG,KAAK,KADR,EACe,KAAK,SADpB,EAEL,SAFK,CAEK,UAFL,CAAP;AAGD","sourcesContent":["import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map"]},"metadata":{},"sourceType":"module"}