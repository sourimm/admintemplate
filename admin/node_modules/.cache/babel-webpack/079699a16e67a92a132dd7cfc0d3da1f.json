{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar common_1 = require(\"@angular/common\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ClickOutsideDirective =\n/** @class */\nfunction () {\n  function ClickOutsideDirective(_el, _ngZone, platformId) {\n    this._el = _el;\n    this._ngZone = _ngZone;\n    this.platformId = platformId;\n    this.clickOutsideEnabled = true;\n    this.attachOutsideOnClick = false;\n    this.delayClickOutsideInit = false;\n    this.emitOnBlur = false;\n    this.exclude = '';\n    this.excludeBeforeClick = false;\n    this.clickOutsideEvents = '';\n    this.clickOutside = new core_1.EventEmitter();\n    this._nodesExcluded = [];\n    this._events = ['click'];\n    this._initOnClickBody = this._initOnClickBody.bind(this);\n    this._onClickBody = this._onClickBody.bind(this);\n    this._onWindowBlur = this._onWindowBlur.bind(this);\n  }\n\n  ClickOutsideDirective.prototype.ngOnInit = function () {\n    if (!common_1.isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    this._init();\n  };\n\n  ClickOutsideDirective.prototype.ngOnDestroy = function () {\n    if (!common_1.isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    this._removeClickOutsideListener();\n\n    this._removeAttachOutsideOnClickListener();\n\n    this._removeWindowBlurListener();\n  };\n\n  ClickOutsideDirective.prototype.ngOnChanges = function (changes) {\n    if (!common_1.isPlatformBrowser(this.platformId)) {\n      return;\n    }\n\n    if (changes['attachOutsideOnClick'] || changes['exclude'] || changes['emitOnBlur']) {\n      this._init();\n    }\n  };\n\n  ClickOutsideDirective.prototype._init = function () {\n    if (this.clickOutsideEvents !== '') {\n      this._events = this.clickOutsideEvents.split(',').map(function (e) {\n        return e.trim();\n      });\n    }\n\n    this._excludeCheck();\n\n    if (this.attachOutsideOnClick) {\n      this._initAttachOutsideOnClickListener();\n    } else {\n      this._initOnClickBody();\n    }\n\n    if (this.emitOnBlur) {\n      this._initWindowBlurListener();\n    }\n  };\n\n  ClickOutsideDirective.prototype._initOnClickBody = function () {\n    if (this.delayClickOutsideInit) {\n      setTimeout(this._initClickOutsideListener.bind(this));\n    } else {\n      this._initClickOutsideListener();\n    }\n  };\n\n  ClickOutsideDirective.prototype._excludeCheck = function () {\n    if (this.exclude) {\n      try {\n        var nodes = Array.from(document.querySelectorAll(this.exclude));\n\n        if (nodes) {\n          this._nodesExcluded = nodes;\n        }\n      } catch (err) {\n        console.error('[ng-click-outside] Check your exclude selector syntax.', err);\n      }\n    }\n  };\n\n  ClickOutsideDirective.prototype._onClickBody = function (ev) {\n    if (!this.clickOutsideEnabled) {\n      return;\n    }\n\n    if (this.excludeBeforeClick) {\n      this._excludeCheck();\n    }\n\n    if (!this._el.nativeElement.contains(ev.target) && !this._shouldExclude(ev.target)) {\n      this._emit(ev);\n\n      if (this.attachOutsideOnClick) {\n        this._removeClickOutsideListener();\n      }\n    }\n  };\n  /**\n   * Resolves problem with outside click on iframe\n   * @see https://github.com/arkon/ng-click-outside/issues/32\n   */\n\n\n  ClickOutsideDirective.prototype._onWindowBlur = function (ev) {\n    var _this = this;\n\n    setTimeout(function () {\n      if (!document.hidden) {\n        _this._emit(ev);\n      }\n    });\n  };\n\n  ClickOutsideDirective.prototype._emit = function (ev) {\n    var _this = this;\n\n    if (!this.clickOutsideEnabled) {\n      return;\n    }\n\n    this._ngZone.run(function () {\n      return _this.clickOutside.emit(ev);\n    });\n  };\n\n  ClickOutsideDirective.prototype._shouldExclude = function (target) {\n    for (var _i = 0, _a = this._nodesExcluded; _i < _a.length; _i++) {\n      var excludedNode = _a[_i];\n\n      if (excludedNode.contains(target)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ClickOutsideDirective.prototype._initClickOutsideListener = function () {\n    var _this = this;\n\n    this._ngZone.runOutsideAngular(function () {\n      _this._events.forEach(function (e) {\n        return document.body.addEventListener(e, _this._onClickBody);\n      });\n    });\n  };\n\n  ClickOutsideDirective.prototype._removeClickOutsideListener = function () {\n    var _this = this;\n\n    this._ngZone.runOutsideAngular(function () {\n      _this._events.forEach(function (e) {\n        return document.body.removeEventListener(e, _this._onClickBody);\n      });\n    });\n  };\n\n  ClickOutsideDirective.prototype._initAttachOutsideOnClickListener = function () {\n    var _this = this;\n\n    this._ngZone.runOutsideAngular(function () {\n      _this._events.forEach(function (e) {\n        return _this._el.nativeElement.addEventListener(e, _this._initOnClickBody);\n      });\n    });\n  };\n\n  ClickOutsideDirective.prototype._removeAttachOutsideOnClickListener = function () {\n    var _this = this;\n\n    this._ngZone.runOutsideAngular(function () {\n      _this._events.forEach(function (e) {\n        return _this._el.nativeElement.removeEventListener(e, _this._initOnClickBody);\n      });\n    });\n  };\n\n  ClickOutsideDirective.prototype._initWindowBlurListener = function () {\n    var _this = this;\n\n    this._ngZone.runOutsideAngular(function () {\n      window.addEventListener('blur', _this._onWindowBlur);\n    });\n  };\n\n  ClickOutsideDirective.prototype._removeWindowBlurListener = function () {\n    var _this = this;\n\n    this._ngZone.runOutsideAngular(function () {\n      window.removeEventListener('blur', _this._onWindowBlur);\n    });\n  };\n  /** @nocollapse */\n\n\n  ClickOutsideDirective.ctorParameters = function () {\n    return [{\n      type: core_1.ElementRef\n    }, {\n      type: core_1.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: core_1.Inject,\n        args: [core_1.PLATFORM_ID]\n      }]\n    }];\n  };\n\n  ClickOutsideDirective.propDecorators = {\n    'clickOutsideEnabled': [{\n      type: core_1.Input\n    }],\n    'attachOutsideOnClick': [{\n      type: core_1.Input\n    }],\n    'delayClickOutsideInit': [{\n      type: core_1.Input\n    }],\n    'emitOnBlur': [{\n      type: core_1.Input\n    }],\n    'exclude': [{\n      type: core_1.Input\n    }],\n    'excludeBeforeClick': [{\n      type: core_1.Input\n    }],\n    'clickOutsideEvents': [{\n      type: core_1.Input\n    }],\n    'clickOutside': [{\n      type: core_1.Output\n    }]\n  };\n\n  ClickOutsideDirective.ɵfac = function ClickOutsideDirective_Factory(t) {\n    return new (t || ClickOutsideDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(core_1.PLATFORM_ID));\n  };\n\n  ClickOutsideDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n    type: ClickOutsideDirective,\n    selectors: [[\"\", \"clickOutside\", \"\"]],\n    inputs: {\n      clickOutsideEnabled: \"clickOutsideEnabled\",\n      attachOutsideOnClick: \"attachOutsideOnClick\",\n      delayClickOutsideInit: \"delayClickOutsideInit\",\n      emitOnBlur: \"emitOnBlur\",\n      exclude: \"exclude\",\n      excludeBeforeClick: \"excludeBeforeClick\",\n      clickOutsideEvents: \"clickOutsideEvents\"\n    },\n    outputs: {\n      clickOutside: \"clickOutside\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  ClickOutsideDirective.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: ClickOutsideDirective,\n    factory: function factory(t) {\n      return ClickOutsideDirective.ɵfac(t);\n    }\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(ClickOutsideDirective, [{\n      type: core_1.Injectable\n    }, {\n      type: core_1.Directive,\n      args: [{\n        selector: '[clickOutside]'\n      }]\n    }], function () {\n      return [{\n        type: ɵngcc0.ElementRef\n      }, {\n        type: ɵngcc0.NgZone\n      }, {\n        type: Object,\n        decorators: [{\n          type: core_1.Inject,\n          args: [core_1.PLATFORM_ID]\n        }]\n      }];\n    }, {\n      clickOutsideEnabled: [{\n        type: core_1.Input\n      }],\n      attachOutsideOnClick: [{\n        type: core_1.Input\n      }],\n      delayClickOutsideInit: [{\n        type: core_1.Input\n      }],\n      emitOnBlur: [{\n        type: core_1.Input\n      }],\n      exclude: [{\n        type: core_1.Input\n      }],\n      excludeBeforeClick: [{\n        type: core_1.Input\n      }],\n      clickOutsideEvents: [{\n        type: core_1.Input\n      }],\n      clickOutside: [{\n        type: core_1.Output\n      }]\n    });\n  })();\n\n  return ClickOutsideDirective;\n}();\n\nexports.ClickOutsideDirective = ClickOutsideDirective;","map":{"version":3,"sources":["click-outside.directive.js"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar ClickOutsideDirective = /** @class */ (function () {\n    function ClickOutsideDirective(_el, _ngZone, platformId) {\n        this._el = _el;\n        this._ngZone = _ngZone;\n        this.platformId = platformId;\n        this.clickOutsideEnabled = true;\n        this.attachOutsideOnClick = false;\n        this.delayClickOutsideInit = false;\n        this.emitOnBlur = false;\n        this.exclude = '';\n        this.excludeBeforeClick = false;\n        this.clickOutsideEvents = '';\n        this.clickOutside = new core_1.EventEmitter();\n        this._nodesExcluded = [];\n        this._events = ['click'];\n        this._initOnClickBody = this._initOnClickBody.bind(this);\n        this._onClickBody = this._onClickBody.bind(this);\n        this._onWindowBlur = this._onWindowBlur.bind(this);\n    }\n    ClickOutsideDirective.prototype.ngOnInit = function () {\n        if (!common_1.isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        this._init();\n    };\n    ClickOutsideDirective.prototype.ngOnDestroy = function () {\n        if (!common_1.isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        this._removeClickOutsideListener();\n        this._removeAttachOutsideOnClickListener();\n        this._removeWindowBlurListener();\n    };\n    ClickOutsideDirective.prototype.ngOnChanges = function (changes) {\n        if (!common_1.isPlatformBrowser(this.platformId)) {\n            return;\n        }\n        if (changes['attachOutsideOnClick'] || changes['exclude'] || changes['emitOnBlur']) {\n            this._init();\n        }\n    };\n    ClickOutsideDirective.prototype._init = function () {\n        if (this.clickOutsideEvents !== '') {\n            this._events = this.clickOutsideEvents.split(',').map(function (e) { return e.trim(); });\n        }\n        this._excludeCheck();\n        if (this.attachOutsideOnClick) {\n            this._initAttachOutsideOnClickListener();\n        }\n        else {\n            this._initOnClickBody();\n        }\n        if (this.emitOnBlur) {\n            this._initWindowBlurListener();\n        }\n    };\n    ClickOutsideDirective.prototype._initOnClickBody = function () {\n        if (this.delayClickOutsideInit) {\n            setTimeout(this._initClickOutsideListener.bind(this));\n        }\n        else {\n            this._initClickOutsideListener();\n        }\n    };\n    ClickOutsideDirective.prototype._excludeCheck = function () {\n        if (this.exclude) {\n            try {\n                var nodes = Array.from(document.querySelectorAll(this.exclude));\n                if (nodes) {\n                    this._nodesExcluded = nodes;\n                }\n            }\n            catch (err) {\n                console.error('[ng-click-outside] Check your exclude selector syntax.', err);\n            }\n        }\n    };\n    ClickOutsideDirective.prototype._onClickBody = function (ev) {\n        if (!this.clickOutsideEnabled) {\n            return;\n        }\n        if (this.excludeBeforeClick) {\n            this._excludeCheck();\n        }\n        if (!this._el.nativeElement.contains(ev.target) && !this._shouldExclude(ev.target)) {\n            this._emit(ev);\n            if (this.attachOutsideOnClick) {\n                this._removeClickOutsideListener();\n            }\n        }\n    };\n    /**\n     * Resolves problem with outside click on iframe\n     * @see https://github.com/arkon/ng-click-outside/issues/32\n     */\n    ClickOutsideDirective.prototype._onWindowBlur = function (ev) {\n        var _this = this;\n        setTimeout(function () {\n            if (!document.hidden) {\n                _this._emit(ev);\n            }\n        });\n    };\n    ClickOutsideDirective.prototype._emit = function (ev) {\n        var _this = this;\n        if (!this.clickOutsideEnabled) {\n            return;\n        }\n        this._ngZone.run(function () { return _this.clickOutside.emit(ev); });\n    };\n    ClickOutsideDirective.prototype._shouldExclude = function (target) {\n        for (var _i = 0, _a = this._nodesExcluded; _i < _a.length; _i++) {\n            var excludedNode = _a[_i];\n            if (excludedNode.contains(target)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    ClickOutsideDirective.prototype._initClickOutsideListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return document.body.addEventListener(e, _this._onClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._removeClickOutsideListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return document.body.removeEventListener(e, _this._onClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._initAttachOutsideOnClickListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return _this._el.nativeElement.addEventListener(e, _this._initOnClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._removeAttachOutsideOnClickListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._events.forEach(function (e) { return _this._el.nativeElement.removeEventListener(e, _this._initOnClickBody); });\n        });\n    };\n    ClickOutsideDirective.prototype._initWindowBlurListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            window.addEventListener('blur', _this._onWindowBlur);\n        });\n    };\n    ClickOutsideDirective.prototype._removeWindowBlurListener = function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            window.removeEventListener('blur', _this._onWindowBlur);\n        });\n    };\n    ClickOutsideDirective.decorators = [\n        { type: core_1.Injectable },\n        { type: core_1.Directive, args: [{ selector: '[clickOutside]' },] },\n    ];\n    /** @nocollapse */\n    ClickOutsideDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n        { type: core_1.NgZone, },\n        { type: Object, decorators: [{ type: core_1.Inject, args: [core_1.PLATFORM_ID,] },] },\n    ]; };\n    ClickOutsideDirective.propDecorators = {\n        'clickOutsideEnabled': [{ type: core_1.Input },],\n        'attachOutsideOnClick': [{ type: core_1.Input },],\n        'delayClickOutsideInit': [{ type: core_1.Input },],\n        'emitOnBlur': [{ type: core_1.Input },],\n        'exclude': [{ type: core_1.Input },],\n        'excludeBeforeClick': [{ type: core_1.Input },],\n        'clickOutsideEvents': [{ type: core_1.Input },],\n        'clickOutside': [{ type: core_1.Output },],\n    };\n    return ClickOutsideDirective;\n}());\nexports.ClickOutsideDirective = ClickOutsideDirective;\n"]},"metadata":{},"sourceType":"script"}