{"ast":null,"code":"import _assertThisInitialized from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\n\nexport function skipUntil(notifier) {\n  return function (source) {\n    return source.lift(new SkipUntilOperator(notifier));\n  };\n}\n\nvar SkipUntilOperator = /*#__PURE__*/function () {\n  function SkipUntilOperator(notifier) {\n    _classCallCheck(this, SkipUntilOperator);\n\n    this.notifier = notifier;\n  }\n\n  _createClass(SkipUntilOperator, [{\n    key: \"call\",\n    value: function call(destination, source) {\n      return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n  }]);\n\n  return SkipUntilOperator;\n}();\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\n\nvar SkipUntilSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(SkipUntilSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(SkipUntilSubscriber);\n\n  function SkipUntilSubscriber(destination, notifier) {\n    var _this;\n\n    _classCallCheck(this, SkipUntilSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.hasValue = false;\n\n    _this.add(_this.innerSubscription = subscribeToResult(_assertThisInitialized(_this), notifier));\n\n    return _this;\n  }\n\n  _createClass(SkipUntilSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.hasValue) {\n        _get(_getPrototypeOf(SkipUntilSubscriber.prototype), \"_next\", this).call(this, value);\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      this.hasValue = true;\n      this.innerSubscription.unsubscribe();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      /* do nothing */\n    }\n  }]);\n\n  return SkipUntilSubscriber;\n}(OuterSubscriber);","map":null,"metadata":{},"sourceType":"module"}