{"ast":null,"code":"import _classCallCheck from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/xampp/htdocs/admin/admin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ChangeDetectorRef, Component, EventEmitter, HostListener, Inject, InjectionToken, Input, NgModule, Optional, Output, forwardRef } from '@angular/core';\nimport { FormsModule, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport 'rxjs';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * Generated from: ui-switch/ui-switch.token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction UiSwitchComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\", 4);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"color\", ctx_r0.getColor(\"checkedTextColor\"));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.checkedLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.checkedLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"color\", ctx_r0.getColor(\"uncheckedTextColor\"));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.uncheckedLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.uncheckedLabel);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar UI_SWITCH_OPTIONS = new InjectionToken('UI_SWITCH_OPTIONS');\n/**\n * @fileoverview added by tsickle\n * Generated from: ui-switch/ui-switch.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nvar UI_SWITCH_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(\n  /**\n  * @return {?}\n  */\n  function () {\n    return UiSwitchComponent;\n  }),\n  multi: true\n};\n\nvar UiSwitchComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?=} config\n   * @param {?=} cdr\n   */\n  function UiSwitchComponent() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var cdr = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, UiSwitchComponent);\n\n    this.cdr = cdr;\n    /**\n     * Emits changed value\n     */\n\n    this.change = new EventEmitter();\n    /**\n     * Emits DOM event\n     */\n\n    this.changeEvent = new EventEmitter();\n    /**\n     * Emits changed value\n     */\n\n    this.valueChange = new EventEmitter();\n\n    this.onTouchedCallback =\n    /**\n    * @param {?} v\n    * @return {?}\n    */\n    function (v) {};\n\n    this.onChangeCallback =\n    /**\n    * @param {?} v\n    * @return {?}\n    */\n    function (v) {};\n\n    this.size = config && config.size || 'medium';\n    this.color = config && config.color;\n    this.switchOffColor = config && config.switchOffColor;\n    this.switchColor = config && config.switchColor;\n    this.defaultBgColor = config && config.defaultBgColor;\n    this.defaultBoColor = config && config.defaultBoColor;\n    this.checkedLabel = config && config.checkedLabel;\n    this.uncheckedLabel = config && config.uncheckedLabel;\n    this.checkedTextColor = config && config.checkedTextColor;\n    this.uncheckedTextColor = config && config.uncheckedTextColor;\n  }\n  /**\n   * @param {?} v\n   * @return {?}\n   */\n\n\n  _createClass(UiSwitchComponent, [{\n    key: \"getColor\",\n\n    /**\n     * @param {?=} flag\n     * @return {?}\n     */\n    value: function getColor() {\n      var flag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (flag === 'borderColor') {\n        return this.defaultBoColor;\n      }\n\n      if (flag === 'switchColor') {\n        if (this.reverse) {\n          return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n        }\n\n        return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n      }\n\n      if (flag === 'checkedTextColor') {\n        return this.reverse ? this.uncheckedTextColor : this.checkedTextColor;\n      }\n\n      if (flag === 'uncheckedTextColor') {\n        return this.reverse ? this.checkedTextColor : this.uncheckedTextColor;\n      }\n\n      if (this.reverse) {\n        return !this.checked ? this.color : this.defaultBgColor;\n      }\n\n      return this.checked ? this.color : this.defaultBgColor;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      this.checked = !this.checked; // Component events\n\n      this.change.emit(this.checked);\n      this.valueChange.emit(this.checked);\n      this.changeEvent.emit(event); // value accessor callbacks\n\n      this.onChangeCallback(this.checked);\n      this.onTouchedCallback(this.checked);\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(event) {\n      var _this = this;\n\n      if (this.disabled) {\n        return;\n      }\n\n      if (this.beforeChange) {\n        this._beforeChange = this.beforeChange.subscribe(\n        /**\n        * @param {?} confirm\n        * @return {?}\n        */\n        function (confirm) {\n          if (confirm) {\n            _this.onClick(event);\n          }\n        });\n      } else {\n        this.onClick(event);\n      }\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(obj) {\n      if (obj !== this.checked) {\n        this.checked = !!obj;\n      }\n\n      this.onChangeCallback(this.checked);\n\n      if (this.cdr) {\n        this.cdr.markForCheck();\n      }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this._beforeChange) {\n        this._beforeChange.unsubscribe();\n      }\n    }\n  }, {\n    key: \"checked\",\n    set: function set(v) {\n      this._checked = v !== false;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    get: function get() {\n      return this._checked;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n\n  }, {\n    key: \"disabled\",\n    set: function set(v) {\n      this._disabled = v !== false;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    get: function get() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n\n  }, {\n    key: \"reverse\",\n    set: function set(v) {\n      this._reverse = v !== false;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    get: function get() {\n      return this._reverse;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n\n  }, {\n    key: \"loading\",\n    set: function set(v) {\n      this._loading = v !== false;\n    }\n    /**\n     * @return {?}\n     */\n    ,\n    get: function get() {\n      return this._loading;\n    }\n  }]);\n\n  return UiSwitchComponent;\n}();\n\nUiSwitchComponent.ɵfac = function UiSwitchComponent_Factory(t) {\n  return new (t || UiSwitchComponent)(ɵngcc0.ɵɵdirectiveInject(UI_SWITCH_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nUiSwitchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: UiSwitchComponent,\n  selectors: [[\"ui-switch\"]],\n  hostBindings: function UiSwitchComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function UiSwitchComponent_click_HostBindingHandler($event) {\n        return ctx.onToggle($event);\n      });\n    }\n  },\n  inputs: {\n    size: \"size\",\n    color: \"color\",\n    switchOffColor: \"switchOffColor\",\n    switchColor: \"switchColor\",\n    defaultBgColor: \"defaultBgColor\",\n    defaultBoColor: \"defaultBoColor\",\n    checkedLabel: \"checkedLabel\",\n    uncheckedLabel: \"uncheckedLabel\",\n    checkedTextColor: \"checkedTextColor\",\n    uncheckedTextColor: \"uncheckedTextColor\",\n    checked: \"checked\",\n    disabled: \"disabled\",\n    reverse: \"reverse\",\n    loading: \"loading\",\n    beforeChange: \"beforeChange\"\n  },\n  outputs: {\n    change: \"change\",\n    changeEvent: \"changeEvent\",\n    valueChange: \"valueChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([UI_SWITCH_CONTROL_VALUE_ACCESSOR])],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 20,\n  consts: [[\"type\", \"button\", \"role\", \"switch\", 1, \"switch\"], [\"class\", \"switch-pane\", 4, \"ngIf\"], [1, \"switch-pane\"], [1, \"switch-label-checked\"], [1, \"switch-label-unchecked\"]],\n  template: function UiSwitchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n      ɵngcc0.ɵɵtemplate(1, UiSwitchComponent_label_1_Template, 5, 8, \"label\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"small\");\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.getColor())(\"border-color\", ctx.getColor(\"borderColor\"));\n      ɵngcc0.ɵɵclassProp(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"loading\", ctx.loading)(\"switch-large\", ctx.size === \"large\")(\"switch-medium\", ctx.size === \"medium\")(\"switch-small\", ctx.size === \"small\");\n      ɵngcc0.ɵɵattribute(\"aria-checked\", ctx.checked);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.checkedLabel || ctx.uncheckedLabel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"background\", ctx.getColor(\"switchColor\"));\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nUiSwitchComponent.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [UI_SWITCH_OPTIONS]\n    }, {\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nUiSwitchComponent.propDecorators = {\n  size: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  switchOffColor: [{\n    type: Input\n  }],\n  switchColor: [{\n    type: Input\n  }],\n  defaultBgColor: [{\n    type: Input\n  }],\n  defaultBoColor: [{\n    type: Input\n  }],\n  checkedLabel: [{\n    type: Input\n  }],\n  uncheckedLabel: [{\n    type: Input\n  }],\n  checkedTextColor: [{\n    type: Input\n  }],\n  uncheckedTextColor: [{\n    type: Input\n  }],\n  beforeChange: [{\n    type: Input\n  }],\n  checked: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  reverse: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  changeEvent: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  onToggle: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(UiSwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ui-switch',\n      template: \"<button\\n  type=\\\"button\\\"\\n  class=\\\"switch\\\"\\n  role=\\\"switch\\\"\\n  [attr.aria-checked]=\\\"checked\\\"\\n  [class.checked]=\\\"checked\\\"\\n  [class.disabled]=\\\"disabled\\\"\\n  [class.loading]=\\\"loading\\\"\\n  [class.switch-large]=\\\"size === 'large'\\\"\\n  [class.switch-medium]=\\\"size === 'medium'\\\"\\n  [class.switch-small]=\\\"size === 'small'\\\"\\n  [style.background-color]=\\\"getColor()\\\"\\n  [style.border-color]=\\\"getColor('borderColor')\\\"\\n>\\n  <label class=\\\"switch-pane\\\" *ngIf=\\\"checkedLabel || uncheckedLabel\\\">\\n    <span\\n      [attr.aria-label]=\\\"this.checkedLabel\\\"\\n      class=\\\"switch-label-checked\\\"\\n      [style.color]=\\\"getColor('checkedTextColor')\\\"\\n      >{{ this.checkedLabel }}</span\\n    >\\n    <span\\n      [attr.aria-label]=\\\"this.uncheckedLabel\\\"\\n      class=\\\"switch-label-unchecked\\\"\\n      [style.color]=\\\"getColor('uncheckedTextColor')\\\"\\n      >{{ this.uncheckedLabel }}</span\\n    >\\n  </label>\\n  <small [style.background]=\\\"getColor('switchColor')\\\">\\n    <ng-content></ng-content>\\n  </small>\\n</button>\\n\",\n      providers: [UI_SWITCH_CONTROL_VALUE_ACCESSOR]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [UI_SWITCH_OPTIONS]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    changeEvent: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    size: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    switchOffColor: [{\n      type: Input\n    }],\n    switchColor: [{\n      type: Input\n    }],\n    defaultBgColor: [{\n      type: Input\n    }],\n    defaultBoColor: [{\n      type: Input\n    }],\n    checkedLabel: [{\n      type: Input\n    }],\n    uncheckedLabel: [{\n      type: Input\n    }],\n    checkedTextColor: [{\n      type: Input\n    }],\n    uncheckedTextColor: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    reverse: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onToggle: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    beforeChange: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: ui-switch/ui-switch.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar UiSwitchModule = /*#__PURE__*/function () {\n  function UiSwitchModule() {\n    _classCallCheck(this, UiSwitchModule);\n  }\n\n  _createClass(UiSwitchModule, null, [{\n    key: \"forRoot\",\n\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    value: function forRoot(config) {\n      return {\n        ngModule: UiSwitchModule,\n        providers: [{\n          provide: UI_SWITCH_OPTIONS,\n          useValue: config || {}\n        }]\n      };\n    }\n  }]);\n\n  return UiSwitchModule;\n}();\n\nUiSwitchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: UiSwitchModule\n});\nUiSwitchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function UiSwitchModule_Factory(t) {\n    return new (t || UiSwitchModule)();\n  },\n  imports: [[CommonModule, FormsModule], FormsModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(UiSwitchModule, {\n    declarations: function declarations() {\n      return [UiSwitchComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule];\n    },\n    exports: function exports() {\n      return [FormsModule, UiSwitchComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(UiSwitchModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [UiSwitchComponent],\n      imports: [CommonModule, FormsModule],\n      exports: [FormsModule, UiSwitchComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { UiSwitchComponent, UiSwitchModule, UI_SWITCH_OPTIONS as ɵa };","map":{"version":3,"sources":["../../src/lib/ui-switch/ui-switch.token.ts","../../src/lib/ui-switch/ui-switch.component.ts","../../src/lib/ui-switch/ui-switch.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const UI_SWITCH_OPTIONS = new InjectionToken('UI_SWITCH_OPTIONS');\n","import {\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  forwardRef,\n  Inject,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { UI_SWITCH_OPTIONS } from './ui-switch.token';\nimport { UiSwitchModuleConfig } from './ui-switch.config';\nimport { Observable, Subscription } from 'rxjs';\n\nconst UI_SWITCH_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => UiSwitchComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'ui-switch',\n  templateUrl: 'ui-switch.component.html',\n  providers: [UI_SWITCH_CONTROL_VALUE_ACCESSOR],\n})\nexport class UiSwitchComponent implements ControlValueAccessor, OnDestroy {\n  private _checked: boolean;\n  private _disabled: boolean;\n  private _reverse: boolean;\n  private _loading: boolean;\n  private _beforeChange: Subscription;\n\n  @Input() size;\n  @Input() color;\n  @Input() switchOffColor;\n  @Input() switchColor;\n  @Input() defaultBgColor;\n  @Input() defaultBoColor;\n  @Input() checkedLabel;\n  @Input() uncheckedLabel;\n  @Input() checkedTextColor;\n  @Input() uncheckedTextColor;\n  @Input() beforeChange: Observable<boolean>;\n\n  @Input()\n  set checked(v: boolean) {\n    this._checked = v !== false;\n  }\n\n  get checked() {\n    return this._checked;\n  }\n\n  @Input()\n  set disabled(v: boolean) {\n    this._disabled = v !== false;\n  }\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  @Input()\n  set reverse(v: boolean) {\n    this._reverse = v !== false;\n  }\n\n  get reverse() {\n    return this._reverse;\n  }\n\n  @Input()\n  set loading(v: boolean) {\n    this._loading = v !== false;\n  }\n\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * Emits changed value\n   */\n  @Output() change = new EventEmitter<boolean>();\n\n  /**\n   * Emits DOM event\n   */\n  @Output() changeEvent = new EventEmitter<MouseEvent>();\n\n  /**\n   * Emits changed value\n   */\n  @Output() valueChange = new EventEmitter<boolean>();\n\n  constructor(\n    @Inject(UI_SWITCH_OPTIONS) @Optional() config: UiSwitchModuleConfig = {},\n    private cdr: ChangeDetectorRef\n  ) {\n    this.size = (config && config.size) || 'medium';\n    this.color = config && config.color;\n    this.switchOffColor = config && config.switchOffColor;\n    this.switchColor = config && config.switchColor;\n    this.defaultBgColor = config && config.defaultBgColor;\n    this.defaultBoColor = config && config.defaultBoColor;\n    this.checkedLabel = config && config.checkedLabel;\n    this.uncheckedLabel = config && config.uncheckedLabel;\n    this.checkedTextColor = config && config.checkedTextColor;\n    this.uncheckedTextColor = config && config.uncheckedTextColor;\n  }\n\n  getColor(flag = '') {\n    if (flag === 'borderColor') {\n      return this.defaultBoColor;\n    }\n    if (flag === 'switchColor') {\n      if (this.reverse) {\n        return !this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n      }\n      return this.checked ? this.switchColor : this.switchOffColor || this.switchColor;\n    }\n    if (flag === 'checkedTextColor') {\n      return this.reverse ? this.uncheckedTextColor : this.checkedTextColor;\n    }\n    if (flag === 'uncheckedTextColor') {\n      return this.reverse ? this.checkedTextColor : this.uncheckedTextColor;\n    }\n    if (this.reverse) {\n      return !this.checked ? this.color : this.defaultBgColor;\n    }\n    return this.checked ? this.color : this.defaultBgColor;\n  }\n\n  onClick(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n    this.checked = !this.checked;\n\n    // Component events\n    this.change.emit(this.checked);\n    this.valueChange.emit(this.checked);\n    this.changeEvent.emit(event);\n\n    // value accessor callbacks\n    this.onChangeCallback(this.checked);\n    this.onTouchedCallback(this.checked);\n    this.cdr.markForCheck();\n  }\n\n  @HostListener('click', ['$event'])\n  onToggle(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n    if (this.beforeChange) {\n      this._beforeChange = this.beforeChange.subscribe((confirm: boolean) => {\n        if (confirm) {\n          this.onClick(event);\n        }\n      });\n    } else {\n      this.onClick(event);\n    }\n  }\n\n  writeValue(obj: any): void {\n    if (obj !== this.checked) {\n      this.checked = !!obj;\n    }\n\n    this.onChangeCallback(this.checked);\n    if (this.cdr) {\n      this.cdr.markForCheck();\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  private onTouchedCallback = (v: any) => {};\n  private onChangeCallback = (v: any) => {};\n\n  ngOnDestroy() {\n    if (this._beforeChange) {\n      this._beforeChange.unsubscribe();\n    }\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { UiSwitchComponent } from './ui-switch.component';\nimport { UI_SWITCH_OPTIONS } from './ui-switch.token';\nimport { UiSwitchModuleConfig } from './ui-switch.config';\n\n@NgModule({\n  declarations: [UiSwitchComponent],\n  imports: [CommonModule, FormsModule],\n  exports: [FormsModule, UiSwitchComponent],\n})\nexport class UiSwitchModule {\n  static forRoot(\n    config: UiSwitchModuleConfig | null | undefined\n  ): ModuleWithProviders<UiSwitchModule> {\n    return {\n      ngModule: UiSwitchModule,\n      providers: [{ provide: UI_SWITCH_OPTIONS, useValue: config || {} }],\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}