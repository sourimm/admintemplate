{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscribeToArray(input));\n  } else {\n    return new Observable(function (subscriber) {\n      var sub = new Subscription();\n      var i = 0;\n      sub.add(scheduler.schedule(function () {\n        if (i === input.length) {\n          subscriber.complete();\n          return;\n        }\n\n        subscriber.next(input[i++]);\n\n        if (!subscriber.closed) {\n          sub.add(this.schedule());\n        }\n      }));\n      return sub;\n    });\n  }\n}","map":{"version":3,"sources":["../../../src/internal/observable/fromArray.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,YAAT,QAA6B,iBAA7B;AACA,SAAS,gBAAT,QAAiC,0BAAjC;AAEA,OAAM,SAAA,SAAA,CAAuB,KAAvB,EAA4C,SAA5C,EAAqE;AACzE,MAAI,CAAC,SAAL,EAAgB;AACd,WAAO,IAAI,UAAJ,CAAkB,gBAAgB,CAAC,KAAD,CAAlC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAI,UAAJ,CAAkB,UAAA,UAAU,EAAG;AACpC,UAAM,GAAG,GAAG,IAAI,YAAJ,EAAZ;AACA,UAAI,CAAC,GAAG,CAAR;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAA;AACzB,YAAI,CAAC,KAAK,KAAK,CAAC,MAAhB,EAAwB;AACtB,UAAA,UAAU,CAAC,QAAX;AACA;AACD;;AACD,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAK,CAAC,CAAC,EAAF,CAArB;;AACA,YAAI,CAAC,UAAU,CAAC,MAAhB,EAAwB;AACtB,UAAA,GAAG,CAAC,GAAJ,CAAQ,KAAK,QAAL,EAAR;AACD;AACF,OATO,CAAR;AAUA,aAAO,GAAP;AACD,KAdM,CAAP;AAeD;AACF","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            let i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map"]},"metadata":{},"sourceType":"module"}